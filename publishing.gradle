if (project.hasProperty("ossrhUser") && project.hasProperty("ossrhPassword")) {

    nexusStaging {
        username = ossrhUser
        password = ossrhPassword
        delayBetweenRetriesInMillis = 30000
        stagingProfileId = "89ee7caa6631c4"
    }

    subprojects {
        apply plugin: 'maven'
        apply plugin: 'signing'

        signing {
            sign configurations.archives
        }

        // OSSRH publication
        uploadArchives {
            repositories {
                mavenDeployer {
                    // POM signature
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                    // Target repository
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                    pom.project {
                        name project.name
                        description 'Data definition and queries Kotlin DSL over Xodus'
                        packaging 'jar'
                        url 'https://github.com/JetBrains/xodus-dnq'

                        scm {
                            connection 'scm:git:https://github.com/JetBrains/xodus-dnq.git'
                            developerConnection 'scm:git@github.com:JetBrains/xodus-dnq.git'
                            url 'https://github.com/JetBrains/xodus-dnq'
                        }

                        licenses {
                            license {
                                name 'Apache 2.0'
                                url 'http://www.apache.org/licenses/'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'JetBrains'
                                name 'JetBrains Team'
                                organization 'JetBrains s.r.o'
                                organizationUrl 'http://www.jetbrains.com'
                            }
                        }
                    }
                }
            }
        }
    }
}



//if (project.project.hasProperty("publishTo")) {
    subprojects {
        apply plugin: 'maven-publish'

        publishing {
//            repositories {
//                maven {
//                    url project.publishTo
//                }
//            }
            publications {
                mavenJava(MavenPublication) {
                    from components.java

                    artifact sourceJar {
                        classifier "sources"
                    }
                }
            }
        }
    }
//}